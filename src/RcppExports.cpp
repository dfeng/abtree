// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_BuildTree
List rcpp_BuildTree(NumericVector y, NumericMatrix x, IntegerVector trt, IntegerMatrix ordering, IntegerVector ncat, int ntrt, int min_bucket, int min_split, int max_depth, int mtry);
RcppExport SEXP abtree_rcpp_BuildTree(SEXP ySEXP, SEXP xSEXP, SEXP trtSEXP, SEXP orderingSEXP, SEXP ncatSEXP, SEXP ntrtSEXP, SEXP min_bucketSEXP, SEXP min_splitSEXP, SEXP max_depthSEXP, SEXP mtrySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type trt(trtSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type ordering(orderingSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ncat(ncatSEXP);
    Rcpp::traits::input_parameter< int >::type ntrt(ntrtSEXP);
    Rcpp::traits::input_parameter< int >::type min_bucket(min_bucketSEXP);
    Rcpp::traits::input_parameter< int >::type min_split(min_splitSEXP);
    Rcpp::traits::input_parameter< int >::type max_depth(max_depthSEXP);
    Rcpp::traits::input_parameter< int >::type mtry(mtrySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_BuildTree(y, x, trt, ordering, ncat, ntrt, min_bucket, min_split, max_depth, mtry));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_Prune
List rcpp_Prune(SEXP xptr, NumericVector valid_y, NumericMatrix valid_x, IntegerVector valid_trt, IntegerVector ncat, NumericMatrix cp_table);
RcppExport SEXP abtree_rcpp_Prune(SEXP xptrSEXP, SEXP valid_ySEXP, SEXP valid_xSEXP, SEXP valid_trtSEXP, SEXP ncatSEXP, SEXP cp_tableSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type valid_y(valid_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type valid_x(valid_xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type valid_trt(valid_trtSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ncat(ncatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cp_table(cp_tableSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_Prune(xptr, valid_y, valid_x, valid_trt, ncat, cp_table));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_Predict
List rcpp_Predict(SEXP xptr, NumericVector test_y, NumericMatrix test_x, IntegerVector test_trt, IntegerVector ncat);
RcppExport SEXP abtree_rcpp_Predict(SEXP xptrSEXP, SEXP test_ySEXP, SEXP test_xSEXP, SEXP test_trtSEXP, SEXP ncatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type xptr(xptrSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type test_y(test_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type test_x(test_xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type test_trt(test_trtSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ncat(ncatSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_Predict(xptr, test_y, test_x, test_trt, ncat));
    return rcpp_result_gen;
END_RCPP
}
