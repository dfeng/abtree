// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_BuildTree
List rcpp_BuildTree(std::vector<double> y, NumericMatrix x_temp, std::vector<int> trt, IntegerMatrix ordering_temp, std::vector<int> ncat, int min_bucket, int min_split, int max_depth);
RcppExport SEXP abtree_rcpp_BuildTree(SEXP ySEXP, SEXP x_tempSEXP, SEXP trtSEXP, SEXP ordering_tempSEXP, SEXP ncatSEXP, SEXP min_bucketSEXP, SEXP min_splitSEXP, SEXP max_depthSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector<double> >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_temp(x_tempSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type trt(trtSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type ordering_temp(ordering_tempSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type ncat(ncatSEXP);
    Rcpp::traits::input_parameter< int >::type min_bucket(min_bucketSEXP);
    Rcpp::traits::input_parameter< int >::type min_split(min_splitSEXP);
    Rcpp::traits::input_parameter< int >::type max_depth(max_depthSEXP);
    __result = Rcpp::wrap(rcpp_BuildTree(y, x_temp, trt, ordering_temp, ncat, min_bucket, min_split, max_depth));
    return __result;
END_RCPP
}
// rcpp_Prune
List rcpp_Prune(NumericMatrix tree_df, std::vector<double> y, NumericMatrix x_temp, std::vector<int> trt, std::vector<int> ncat, NumericMatrix cp_tbl);
RcppExport SEXP abtree_rcpp_Prune(SEXP tree_dfSEXP, SEXP ySEXP, SEXP x_tempSEXP, SEXP trtSEXP, SEXP ncatSEXP, SEXP cp_tblSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type tree_df(tree_dfSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x_temp(x_tempSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type trt(trtSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type ncat(ncatSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type cp_tbl(cp_tblSEXP);
    __result = Rcpp::wrap(rcpp_Prune(tree_df, y, x_temp, trt, ncat, cp_tbl));
    return __result;
END_RCPP
}
// rcpp_Predict
List rcpp_Predict(NumericMatrix tree, std::vector<double> y, NumericMatrix x, std::vector<int> trt, std::vector<int> ncat);
RcppExport SEXP abtree_rcpp_Predict(SEXP treeSEXP, SEXP ySEXP, SEXP xSEXP, SEXP trtSEXP, SEXP ncatSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< NumericMatrix >::type tree(treeSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type trt(trtSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type ncat(ncatSEXP);
    __result = Rcpp::wrap(rcpp_Predict(tree, y, x, trt, ncat));
    return __result;
END_RCPP
}
